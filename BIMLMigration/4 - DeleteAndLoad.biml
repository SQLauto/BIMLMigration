<Biml xmlns="http://schemas.varigence.com/biml.xsd">
    <#
    string metadataConnectionString ="Provider=SQLNCLI11;Server=LOCALHOST;Initial Catalog=AdventureWorksDW2014;Integrated Security=SSPI;";
    DataTable tables = ExternalDataAccess.GetDataTable(metadataConnectionString,
    "SELECT SchemaName, TableName, Section, JoinCriteria, SelectCriteria, WhereCriteria, NeedToDelete, LookupColumns, LookupColumnXML FROM dbo.MigrationStep ORDER BY Section, SchemaName, TableName");
    DataTable sections = ExternalDataAccess.GetDataTable(metadataConnectionString,
    "SELECT DISTINCT Section FROM dbo.MigrationStep ORDER BY Section");
    DataTable sectionsDesc = ExternalDataAccess.GetDataTable(metadataConnectionString,
    "SELECT DISTINCT Section FROM dbo.MigrationStep ORDER BY Section DESC"); #>
    <Projects>
        <PackageProject Name="BIMLMigration" ProtectionLevel="DontSaveSensitive">
            <Parameters>
                <Parameter Name="CustomerID" DataType="Int32">12195</Parameter>
                <Parameter Name="OldWarehouseServer" DataType="String">.</Parameter>
                <Parameter Name="OldWarehouseDatabase" DataType="String">AdventureWorksDW2014</Parameter>
                <Parameter Name="NewWarehouseServer" DataType="String">.</Parameter>
                <Parameter Name="NewWarehouseDatabase" DataType="String">AdventureWorksDW2014Dest</Parameter>
                <Parameter Name="PerformMigration" DataType="Boolean">True</Parameter>
                <Parameter Name="PerformDeletion" DataType="Boolean">True</Parameter>
            </Parameters>
            <Packages>
                <Package PackageName="MigrateCustomer" />
            </Packages>
        </PackageProject>
    </Projects>
    <Connections>
        <Connection Name="OldWarehouseNode" ConnectionString="Data Source=LOCALHOST;Initial Catalog=AdventureWorksDW2014;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
        <Connection Name="NewWarehouseNode" ConnectionString="Data Source=LOCALHOST;Initial Catalog=AdventureWorksDW2014Dest;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
    </Connections>
    <Packages>
        <Package Name="MigrateCustomer" ConstraintMode="Linear" ProtectionLevel="DontSaveSensitive">
            <Connections>
                <Connection ConnectionName="OldWarehouseNode">
                    <Expressions>
                        <Expression ExternalProperty="InitalCatalog">@[$Project::OldWarehouseDatabase]</Expression>
                        <Expression ExternalProperty="ServerName">@[$Project::OldWarehouseServer]</Expression>
                    </Expressions>
                </Connection>
                <Connection ConnectionName="NewWarehouseNode">
                    <Expressions>
                        <Expression ExternalProperty="InitialCatalog">@[$Project::NewWarehouseDatabase]</Expression>
                        <Expression ExternalProperty="ServerName">@[$Project::NewWarehouseServer]</Expression>
                    </Expressions>
                </Connection>
            </Connections>
            <Tasks>
                <Container Name="Delete From New Tables" ConstraintMode="Linear">
                    <Expressions>
                        <Expression ExternalProperty="Disable">!(@[$Project::PerformDeletion])</Expression>
                    </Expressions>
                    <Tasks>
                        <# foreach (DataRow row in sectionsDesc.Rows) { #>
                        <Container Name="Delete From New Table <#=row[0]#>" ConstraintMode="Linear">
                            <Tasks>
                                <# foreach (DataRow trow in tables.Rows) {
                            //For this round, I want to make sure EVERY table has a Delete action.  We'll fix that later...
                            if (Convert.ToInt32(trow[2]) == Convert.ToInt32(row[0]) && (Convert.ToBoolean(trow[6]) || 1 == 1)) {#>
                                <ExecuteSQL Name="Prepare <#=trow[1]#>" ConnectionName="NewWarehouseNode">
                                    <DirectInput>
                                        DELETE FROM [<#=trow[0]#>].[<#=trow[1]#>];
                                    </DirectInput>
                                </ExecuteSQL>
                                <# }
                            } #>
                            </Tasks>
                        </Container>
                        <# } #>
                    </Tasks>
                </Container>
                 
                <Container Name="Migrate To New Table" ConstraintMode="Linear">
                    <Expressions>
                        <Expression ExternalProperty="Disable">!(@[$Project::PerformMigration])</Expression>
                    </Expressions>
                    <Tasks>
                        <# foreach (DataRow row in sections.Rows) { #>
                        <Container Name="Migrate To New Table <#=row[0]#>" ConstraintMode="Linear">
                            <Tasks>
                                <# foreach (DataRow trow in tables.Rows) {
                            if (Convert.ToInt32(trow[2]) == Convert.ToInt32(row[0])) {#>
                                <Dataflow Name="Migrate <#=trow[1]#>" DefaultBufferSize="104857600">
                                    <Transformations>
                                        <OleDbSource Name="Old Node" ConnectionName="OldWarehouseNode">
                                            <DirectInput>
                                                SELECT 
                                                    <#=trow[4]#>
                                                FROM [<#=trow[0]#>].[<#=trow[1]#>] x 
                                                    <#=trow[3]#>
                                                WHERE
                                                    <#=trow[5]#>;
                                            </DirectInput>
                                            <Parameters>
                                                <Parameter Name="0" VariableName="BIMLMigration.CustomerID" />
                                            </Parameters>
                                        </OleDbSource>
                                        <OleDbDestination Name="New Node" ConnectionName="NewWarehouseNode" BatchSize="10000" KeepIdentity=<# if(!Convert.ToBoolean(trow[6])) { #> "true" <# } else { #> "false" <# } #> UseFastLoadIfAvailable="true" MaximumInsertCommitSize="2000000">
                                            <ExternalTableOutput Table="[<#=trow[0]#>].[<#=trow[1]#>]"></ExternalTableOutput>
                                        </OleDbDestination>
                                    </Transformations>
                                </Dataflow>
                                <# }
                            } #>
                            </Tasks>
                        </Container>
                        <# } #>
                    </Tasks>
                </Container>
            </Tasks>
        </Package>
    </Packages>
</Biml>
<#@ template language="C#" hostspecific="true" #>
<#@ import namespace="System.Data" #>
